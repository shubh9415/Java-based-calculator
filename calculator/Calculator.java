/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator;

/**
 *
 * @author Shubham
 */
public class Calculator extends javax.swing.JFrame {

    /**
     * Creates new form Calculator
     */
    public Calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bdelete = new javax.swing.JButton();
        bc = new javax.swing.JButton();
        bce = new javax.swing.JButton();
        bsign = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        bdivide = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        bmul = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        bsub = new javax.swing.JButton();
        b0 = new javax.swing.JButton();
        bdot = new javax.swing.JButton();
        bplus = new javax.swing.JButton();
        bequal = new javax.swing.JButton();
        display = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bdelete.setBackground(new java.awt.Color(255, 255, 255));
        bdelete.setText("DEL");
        bdelete.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        bdelete.setContentAreaFilled(false);
        bdelete.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bdelete.setMaximumSize(new java.awt.Dimension(49, 23));
        bdelete.setMinimumSize(new java.awt.Dimension(49, 23));
        bdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdeleteActionPerformed(evt);
            }
        });

        bc.setBackground(new java.awt.Color(255, 255, 255));
        bc.setText("CE");
        bc.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        bc.setContentAreaFilled(false);
        bc.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bc.setMaximumSize(new java.awt.Dimension(49, 23));
        bc.setMinimumSize(new java.awt.Dimension(49, 23));
        bc.setPreferredSize(new java.awt.Dimension(49, 23));
        bc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcActionPerformed(evt);
            }
        });

        bce.setBackground(new java.awt.Color(255, 255, 255));
        bce.setText("C");
        bce.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        bce.setContentAreaFilled(false);
        bce.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bce.setMaximumSize(new java.awt.Dimension(49, 23));
        bce.setMinimumSize(new java.awt.Dimension(49, 23));
        bce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bceActionPerformed(evt);
            }
        });

        bsign.setBackground(new java.awt.Color(255, 255, 255));
        bsign.setText("+/-");
        bsign.setToolTipText("");
        bsign.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        bsign.setContentAreaFilled(false);
        bsign.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bsign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsignActionPerformed(evt);
            }
        });

        b7.setBackground(new java.awt.Color(255, 255, 255));
        b7.setText("7");
        b7.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        b7.setContentAreaFilled(false);
        b7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b7.setMaximumSize(new java.awt.Dimension(49, 23));
        b7.setMinimumSize(new java.awt.Dimension(49, 23));
        b7.setPreferredSize(new java.awt.Dimension(49, 23));
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        b8.setBackground(new java.awt.Color(255, 255, 255));
        b8.setText("8");
        b8.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        b8.setContentAreaFilled(false);
        b8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b8.setMaximumSize(new java.awt.Dimension(49, 23));
        b8.setMinimumSize(new java.awt.Dimension(49, 23));
        b8.setPreferredSize(new java.awt.Dimension(49, 23));
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        b9.setBackground(new java.awt.Color(255, 255, 255));
        b9.setText("9");
        b9.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        b9.setContentAreaFilled(false);
        b9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b9.setMaximumSize(new java.awt.Dimension(49, 23));
        b9.setMinimumSize(new java.awt.Dimension(49, 23));
        b9.setPreferredSize(new java.awt.Dimension(49, 23));
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        bdivide.setBackground(new java.awt.Color(255, 255, 255));
        bdivide.setText("/");
        bdivide.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        bdivide.setContentAreaFilled(false);
        bdivide.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bdivide.setMaximumSize(new java.awt.Dimension(49, 23));
        bdivide.setMinimumSize(new java.awt.Dimension(49, 23));
        bdivide.setPreferredSize(new java.awt.Dimension(49, 23));
        bdivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdivideActionPerformed(evt);
            }
        });

        b4.setBackground(new java.awt.Color(255, 255, 255));
        b4.setText("4");
        b4.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        b4.setContentAreaFilled(false);
        b4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b4.setMaximumSize(new java.awt.Dimension(49, 23));
        b4.setMinimumSize(new java.awt.Dimension(49, 23));
        b4.setPreferredSize(new java.awt.Dimension(49, 23));
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b5.setBackground(new java.awt.Color(255, 255, 255));
        b5.setText("5");
        b5.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        b5.setContentAreaFilled(false);
        b5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b5.setMaximumSize(new java.awt.Dimension(49, 23));
        b5.setMinimumSize(new java.awt.Dimension(49, 23));
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b6.setBackground(new java.awt.Color(255, 255, 255));
        b6.setText("6");
        b6.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        b6.setContentAreaFilled(false);
        b6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b6.setMaximumSize(new java.awt.Dimension(49, 23));
        b6.setMinimumSize(new java.awt.Dimension(49, 23));
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        bmul.setBackground(new java.awt.Color(255, 255, 255));
        bmul.setText("*");
        bmul.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        bmul.setContentAreaFilled(false);
        bmul.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bmul.setMaximumSize(new java.awt.Dimension(49, 23));
        bmul.setMinimumSize(new java.awt.Dimension(49, 23));
        bmul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmulActionPerformed(evt);
            }
        });

        b1.setBackground(new java.awt.Color(255, 255, 255));
        b1.setText("1");
        b1.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        b1.setContentAreaFilled(false);
        b1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b1.setMaximumSize(new java.awt.Dimension(49, 23));
        b1.setMinimumSize(new java.awt.Dimension(49, 23));
        b1.setPreferredSize(new java.awt.Dimension(49, 23));
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b2.setBackground(new java.awt.Color(255, 255, 255));
        b2.setText("2");
        b2.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        b2.setContentAreaFilled(false);
        b2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b2.setMaximumSize(new java.awt.Dimension(49, 23));
        b2.setMinimumSize(new java.awt.Dimension(49, 23));
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b3.setBackground(new java.awt.Color(255, 255, 255));
        b3.setText("3");
        b3.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        b3.setContentAreaFilled(false);
        b3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b3.setMaximumSize(new java.awt.Dimension(49, 23));
        b3.setMinimumSize(new java.awt.Dimension(49, 23));
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        bsub.setBackground(new java.awt.Color(255, 255, 255));
        bsub.setText("-");
        bsub.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        bsub.setContentAreaFilled(false);
        bsub.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bsub.setMaximumSize(new java.awt.Dimension(49, 23));
        bsub.setMinimumSize(new java.awt.Dimension(49, 23));
        bsub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsubActionPerformed(evt);
            }
        });

        b0.setBackground(new java.awt.Color(255, 255, 255));
        b0.setText("0");
        b0.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        b0.setContentAreaFilled(false);
        b0.setPreferredSize(new java.awt.Dimension(49, 23));
        b0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b0ActionPerformed(evt);
            }
        });

        bdot.setBackground(new java.awt.Color(255, 255, 255));
        bdot.setText(".");
        bdot.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        bdot.setContentAreaFilled(false);
        bdot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdotActionPerformed(evt);
            }
        });

        bplus.setBackground(new java.awt.Color(255, 255, 255));
        bplus.setText("+");
        bplus.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        bplus.setContentAreaFilled(false);
        bplus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bplusActionPerformed(evt);
            }
        });

        bequal.setBackground(new java.awt.Color(255, 255, 255));
        bequal.setText("=");
        bequal.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        bequal.setContentAreaFilled(false);
        bequal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bequalActionPerformed(evt);
            }
        });

        display.setBackground(new java.awt.Color(255, 255, 255));
        display.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        display.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        display.setText("0");
        display.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(display, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b0, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                            .addComponent(b4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bdelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bce, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addComponent(bsign, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(b2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(b8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(b5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(b9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(b6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(b3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bmul, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bdivide, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bsub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bdot, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bplus, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bequal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bce, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bsign, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bdivide, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bmul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bsub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bequal, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bplus, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bdot, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcActionPerformed
         if(display.getText().equals("ERROR"))
             ;//NOTHING WILL HAPPEN
         else{
             display.setText("0");
             isDot=false;
         }
    }//GEN-LAST:event_bcActionPerformed

    private void bdivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdivideActionPerformed
         if(display.getText().equals("ERROR"))
            ;//nothig will happen
        else{
            if(whichOperand==false){
                data1=Double.parseDouble(display.getText());
                whichOperand=true;
            }
            else{
                if(isOperatorPressed)
                    ;//nothing will happen
                else{
                    data2=Double.parseDouble(display.getText());
                    switch(operator)
                        {
                        case 1:
                            data1=data1+data2;
                            break;
                        case 2:
                            data1=data1-data2;
                            break;
                        case 3:
                            data1=data1*data2;
                            break;
                        case 4:
                           if(data2!=0.0)
                               data1=data1/data2;
                           else
                               display.setText("ERROR");
                           break;
                    }
                    if(display.getText().equals("ERROR")){
                        isOperatorPressed=false;
                        operator=0;
                    }
                    else if(data1==Math.floor(data1))
                        display.setText(""+(int)Math.floor(data1));
                    else
                        display.setText(""+data1);
                    
                }
            }  
            if(!display.getText().equals("ERROR")){
                isOperatorPressed=true;
                operator=1;
            }
        }                                    
    }//GEN-LAST:event_bdivideActionPerformed

    private void b0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b0ActionPerformed
        if(display.getText().equals("ERROR"))
            ;//NOTHING TO DO
        else
            if(display.getText().equals("0")||isOperatorPressed)
                display.setText("0");
        else
            display.setText(display.getText()+"0");
        isOperatorPressed=false;
                
    }//GEN-LAST:event_b0ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
         if(display.getText().equals("ERROR"))
            ;//NOTHING TO DO
        else
            if(display.getText().equals("0")||isOperatorPressed)
                display.setText("1");
        else
            display.setText(display.getText()+"1");
        isOperatorPressed=false;
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        if(display.getText().equals("ERROR"))
            ;//NOTHING TO DO
        else
            if(display.getText().equals("0")||isOperatorPressed)
                display.setText("2");
        else
            display.setText(display.getText()+"2");
        isOperatorPressed=false;
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
         if(display.getText().equals("ERROR"))
            ;//NOTHING TO DO
        else
            if(display.getText().equals("0")||isOperatorPressed)
                display.setText("3");
        else
            display.setText(display.getText()+"3");
        isOperatorPressed=false;
    }//GEN-LAST:event_b3ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
         if(display.getText().equals("ERROR"))
            ;//NOTHING TO DO
        else
            if(display.getText().equals("0")||isOperatorPressed)
                display.setText("4");
        else
            display.setText(display.getText()+"4");
        isOperatorPressed=false;
    }//GEN-LAST:event_b4ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
         if(display.getText().equals("ERROR"))
            ;//NOTHING TO DO
        else
            if(display.getText().equals("0")||isOperatorPressed)
                display.setText("5");
        else
            display.setText(display.getText()+"5");
        isOperatorPressed=false;
    }//GEN-LAST:event_b5ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
         if(display.getText().equals("ERROR"))
            ;//NOTHING TO DO
        else
            if(display.getText().equals("0")||isOperatorPressed)
                display.setText("6");
        else
            display.setText(display.getText()+"6");
        isOperatorPressed=false;
    }//GEN-LAST:event_b6ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
         if(display.getText().equals("ERROR"))
            ;//NOTHING TO DO
        else
            if(display.getText().equals("0")||isOperatorPressed)
                display.setText("7");
        else
            display.setText(display.getText()+"7");
        isOperatorPressed=false;
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
         if(display.getText().equals("ERROR"))
            ;//NOTHING TO DO
        else
            if(display.getText().equals("0")||isOperatorPressed)
                display.setText("8");
        else
            display.setText(display.getText()+"8");
        isOperatorPressed=false;
    }//GEN-LAST:event_b8ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
         if(display.getText().equals("ERROR"))
            ;//NOTHING TO DO
        else
            if(display.getText().equals("0")||isOperatorPressed)
                display.setText("9");
        else
            display.setText(display.getText()+"9");
        isOperatorPressed=false;
    }//GEN-LAST:event_b9ActionPerformed

    private void bdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdeleteActionPerformed
       if(display.getText().equals("ERROR")||display.getText().equals("0")||isOperatorPressed)
           ;//nothing will happen
       else{
           if(display.getText().length()>1)
               display.setText(display.getText().substring(0,display.getText().length()-1));
           else
               display.setText("0");
       if(display.getText().indexOf('.')==-1)
           isDot=false;
    }//GEN-LAST:event_bdeleteActionPerformed
    }
    private void bceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bceActionPerformed
        display.setText("0");
        isOperatorPressed=false;
        whichOperand=false;
        operator=0;
        isDot=false;
    }//GEN-LAST:event_bceActionPerformed

    private void bsignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsignActionPerformed
        if(display.getText().equals("ERROR"))
            ;//nothing will happen
        else{
            if(display.getText().equals("0"))
                ;//nothibg will happen
            else{
                if(Double.parseDouble(display.getText())>0.0)
                    display.setText("-"+display.getText());
                else
                    display.setText(display.getText().substring(1,display.getText().length()));
            }
        }
    }//GEN-LAST:event_bsignActionPerformed

    private void bdotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdotActionPerformed
        if(display.getText().equals("ERROR"))
            ;//nothing will happen
        else if(display.getText().equals("0")||isOperatorPressed){
            display.setText("0.");
            isDot=true;
        }
        else{
            if(isDot)
                ;//nothing will happen
            else 
                display.setText(display.getText()+".");
            isDot=true;
        }
        isOperatorPressed=false;
    }//GEN-LAST:event_bdotActionPerformed

    private void bplusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bplusActionPerformed
        if(display.getText().equals("ERROR"))
            ;//nothig will happen
        else{
            if(whichOperand==false){
                data1=Double.parseDouble(display.getText());
                whichOperand=true;
            }
            else{
                if(isOperatorPressed)
                    ;//nothing will happen
                else{
                    data2=Double.parseDouble(display.getText());
                    switch(operator)
                        {
                        case 1:
                            data1=data1+data2;
                            break;
                        case 2:
                            data1=data1-data2;
                            break;
                        case 3:
                            data1=data1*data2;
                            break;
                        case 4:
                           if(data2!=0.0)
                               data1=data1/data2;
                           else
                               display.setText("ERROR");
                           break;
                    }
                    if(display.getText().equals("ERROR")){
                        isOperatorPressed=false;
                        operator=0;
                    }
                    else if(data1==Math.floor(data1))
                        display.setText(""+(int)Math.floor(data1));
                    else
                        display.setText(""+data1);
                    
                }
            }  
            if(!display.getText().equals("ERROR")){
                isOperatorPressed=true;
                operator=1;
            }
        }
    }//GEN-LAST:event_bplusActionPerformed

    private void bsubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsubActionPerformed
         if(display.getText().equals("ERROR"))
            ;//nothig will happen
        else{
            if(whichOperand==false){
                data1=Double.parseDouble(display.getText());
                whichOperand=true;
            }
            else{
                if(isOperatorPressed)
                    ;//nothing will happen
                else{
                    data2=Double.parseDouble(display.getText());
                    switch(operator)
                        {
                        case 1:
                            data1=data1+data2;
                            break;
                        case 2:
                            data1=data1-data2;
                            break;
                        case 3:
                            data1=data1*data2;
                            break;
                        case 4:
                           if(data2!=0.0)
                               data1=data1/data2;
                           else
                               display.setText("ERROR");
                           break;
                    }
                    if(display.getText().equals("ERROR")){
                        isOperatorPressed=false;
                        operator=0;
                    }
                    else if(data1==Math.floor(data1))
                        display.setText(""+(int)Math.floor(data1));
                    else
                        display.setText(""+data1);
                    
                }
            }  
            if(!display.getText().equals("ERROR")){
                isOperatorPressed=true;
                operator=2;
            }
        }
                                    
    }//GEN-LAST:event_bsubActionPerformed

    private void bmulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmulActionPerformed
         if(display.getText().equals("ERROR"))
            ;//nothig will happen
        else{
            if(whichOperand==false){
                data1=Double.parseDouble(display.getText());
                whichOperand=true;
            }
            else{
                if(isOperatorPressed)
                    ;//nothing will happen
                else{
                    data2=Double.parseDouble(display.getText());
                    switch(operator)
                        {
                        case 1:
                            data1=data1+data2;
                            break;
                        case 2:
                            data1=data1-data2;
                            break;
                        case 3:
                            data1=data1*data2;
                            break;
                        case 4:
                           if(data2!=0.0)
                               data1=data1/data2;
                           else
                               display.setText("ERROR");
                           break;
                    }
                    if(display.getText().equals("ERROR")){
                        isOperatorPressed=false;
                        operator=0;
                    }
                    else if(data1==Math.floor(data1))
                        display.setText(""+(int)Math.floor(data1));
                    else
                        display.setText(""+data1);
                    
                }
            }  
            if(!display.getText().equals("ERROR")){
                isOperatorPressed=true;
                operator=3;
            }
        }                                   
    }//GEN-LAST:event_bmulActionPerformed

    private void bequalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bequalActionPerformed
         if(display.getText().equals("ERROR"))
            ;//nothig will happen
        else{
            if(whichOperand==false){
                data1=Double.parseDouble(display.getText());
                whichOperand=false;
                isOperatorPressed=true;
            }
            else{
                if(isOperatorPressed){
                    data2=data1;
                    switch(operator)
                        {
                        case 1:
                            data1=data1+data2;
                            break;
                        case 2:
                            data1=data1-data2;
                            break;
                        case 3:
                            data1=data1*data2;
                            break;
                        case 4:
                           if(data2!=0.0)
                               data1=data1/data2;
                           else
                               display.setText("ERROR");
                           break;
                    }
                    if(display.getText().equals("ERROR")){
                        isOperatorPressed=false;
                        operator=0;
                    }
                    else if(data1==Math.floor(data1))
                        display.setText(""+(int)Math.floor(data1));
                    else
                        display.setText(""+data1);
                }
                else{
                    data2=Double.parseDouble(display.getText());
                    switch(operator)
                    {
                        case 1:
                            data1=data1+data2;
                            break;
                        case 2:
                            data1=data1-data2;
                            break;
                        case 3:
                            data1=data1*data2;
                            break;
                        case 4:
                            if(data2!=0.0)
                                data1=data1/data2;
                            else
                                display.setText("ERROR");
                            break;
                    }
                    if(!display.getText().equals("ERROR")){
                isOperatorPressed=false;
                operator=0;
                }
                    else if(data1==Math.floor(data1))
                        display.setText(""+(int)Math.floor(data1));
                    else
                        display.setText(""+data1);         
            }
                whichOperand=false;
        } 
            if(!display.getText().equals("ERROR")){
                isOperatorPressed=true;
                operator=5;
            }
    }//GEN-LAST:event_bequalActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }
    private double data1,data2;
    private boolean isDot=false; //if dot is pressed then true
    private boolean isOperatorPressed=false; //true when operator is pressed
    private boolean whichOperand=false; //true for second operand
    private int operator=0; //0-no selection,1-plus,2-minus,3-multi,4-div ,5-equal
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b0;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JButton bc;
    private javax.swing.JButton bce;
    private javax.swing.JButton bdelete;
    private javax.swing.JButton bdivide;
    private javax.swing.JButton bdot;
    private javax.swing.JButton bequal;
    private javax.swing.JButton bmul;
    private javax.swing.JButton bplus;
    private javax.swing.JButton bsign;
    private javax.swing.JButton bsub;
    private javax.swing.JLabel display;
    // End of variables declaration//GEN-END:variables
}
